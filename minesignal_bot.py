from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import logging
import os

# üîê –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ)
BOT_TOKEN = os.getenv("BOT_TOKEN", "–≤—Å—Ç–∞–≤—å_—Å—é–¥–∞_—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω_–µ—Å–ª–∏_—Ç–µ—Å—Ç–∏—Ä—É–µ—à—å")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# üì≤ –ö–Ω–æ–ø–∫–∏
keyboard = InlineKeyboardMarkup(row_width=2)
keyboard.add(
    InlineKeyboardButton("üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", url="https://1win.run/?p=ThJS"),
    InlineKeyboardButton("üéÅ –ü—Ä–æ–º–æ–∫–æ–¥", callback_data="promo"),
    InlineKeyboardButton("üì° –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data="signal")
)

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    text = (
        "üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Minesignal Bot*!\n\n"
        "–ú—ã –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º —É–¥–∞—á–Ω—ã–µ —è—á–µ–π–∫–∏ –≤ –∏–≥—Ä–µ *Mines –æ—Ç 1Win* —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.\n\n"
        "‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    await message.answer(text, reply_markup=keyboard, parse_mode="Markdown")

# üéÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(lambda c: c.data == "promo")
async def promo_callback(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "üéÅ –ü—Ä–æ–º–æ–∫–æ–¥: *1WINBETS5*", parse_mode="Markdown")

# üì° –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å–∏–≥–Ω–∞–ª–∞
@dp.callback_query_handler(lambda c: c.data == "signal")
async def signal_callback(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(
        callback_query.from_user.id,
        "‚ú® –°–∏–≥–Ω–∞–ª: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å 2Ô∏è‚É£, 5Ô∏è‚É£ –∏ 8Ô∏è‚É£ —è—á–µ–π–∫—É.\n(–ò–ò-–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å 92% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é)"
    )

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
